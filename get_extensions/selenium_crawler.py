# For now, this just downloads all extensions immediately available on the
# front page of the extensions store.  We'll want to follow a bunch of
# links out to get as many extensions as possible.


from pyvirtualdisplay import Display
from selenium import webdriver

#display = Display(visible=0, size=(1024, 768))
#display.start()







from selenium import webdriver
from re import findall
from urllib.request import urlretrieve

#CHROMEDRIVER_PATH = "/home/ubuntu/Chrome-XSS-Vulnerability/get_extensions/chromedriver"
CHROMEDRIVER_PATH = "/usr/lib/chromium-browser/chromedriver"
CHROME_VERSION = "53.0.2785.143"


MAX_COUNTER = 100 # for now, only get 100 extensions

DOWNLOAD_FOLDER = "extensions/" # MUST end with "/"
STORE_URL = "https://chrome.google.com/webstore/category/extensions"

def get_download_url(ext_id):
    return "https://clients2.google.com/service/update2/crx?response=redirect&prodversion=" + CHROME_VERSION + "&x=id%3D" + ext_id + "%26uc"

def get_ids_from_source(source):
    id_regex = r"""/webstore/detail/.+?/([a-z]{32})"""
    return findall(id_regex, source)

# Drive Chrome
browser = webdriver.Chrome(executable_path=CHROMEDRIVER_PATH)
browser.get(STORE_URL)

downloaded = set()
# Get all extensions on this page, add their IDs to a set
new_ids = get_ids_from_source(browser.page_source)

# download all of these:
counter = 0
for eid in new_ids: # this is getting modified as we go
    if counter >= MAX_COUNTER:
        break
    else:
        counter = counter + 1
    if eid in downloaded:
        continue
    # download this extension
    #urlretrieve(get_download_url(eid), DOWNLOAD_FOLDER + eid + ".crx")
    print(get_download_url(eid))
    downloaded.add(eid)

    # add any new extension to new_id's
    related_url =  "https://chrome.google.com/webstore/detail/" + eid + "/related"
    browser.get(related_url)
    print(browser.page_source)
    break

browser.close()
#display.stop()
    











